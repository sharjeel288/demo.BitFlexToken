{"version":3,"sources":["Contract.js","Utils.js","Components/Client_Total_Capital.js","Components/FlexTestTokenCredit.js","Components/Client_DIvidend_Referrel.js","Components/Buy_Flex_token.js","Components/Sell_Flex_token.js","Components/Your_Total_Dividend.js","Components/SideDrawer/BackDrop.js","Components/SideDrawer/SideDrawer.js","Components/Navbar.js","App.js","index.js"],"names":["CONTRACT_ABI","constant","inputs","name","type","outputs","payable","stateMutability","anonymous","indexed","getContracts","web3","eth","Contract","Client_Total_Capital","contract","useState","undefined","total","setTotal","useEffect","a","methods","totalEthereumBalance","call","tA","utils","fromWei","init","className","toFixed","FlexTestTokenCredit","account","balanceOf","Amount","parseFloat","Client_DIvidend_Referrel","dividend","setdividend","dividendsOf","Buy_Flex_token","buy","amount","setAmount","buyPrice","setBuyPrice","tAD","AmountRef","onSubmit","e","preventDefault","min","max","step","placeholder","value","onChange","target","Sell_Flex_token","Sell","sellPrice","setSellPrice","required","Your_Total_Dividend","withDraw","reInvest","dividendWithReferral","setRefferal","console","log","onClick","backDrop","props","show","clicked","sideDrawer","attachedClass","open","BackDrop","closed","join","href","Navbar","setSideDrawer","openSide","style","padding","SideDrawer","App","accounts","token","settoken","setDividend","loading","setLoading","buyTokens","address","toWei","add","toChecksumAddress","send","from","on","receipt","error","sellTokens","sell","withdrawProfit","withdraw","InvestProfit","reinvest","LoadingContainer","setWeb3","setContract","setAccount","Promise","resolve","reject","window","addEventListener","ethereum","Web3","enable","provider","providers","HttpProvider","getAccounts","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f8376253.chunk.js","sourcesContent":["export const CONTRACT_ABI = [\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      {\r\n        name: '_referredBy',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    name: 'buy',\r\n    outputs: [\r\n      {\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    payable: true,\r\n    stateMutability: 'payable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [],\r\n    name: 'disableInitialStage',\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [],\r\n    name: 'exit',\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [],\r\n    name: 'reinvest',\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      {\r\n        name: '_amountOfTokens',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'sell',\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      {\r\n        name: '_identifier',\r\n        type: 'bytes32',\r\n      },\r\n      {\r\n        name: '_status',\r\n        type: 'bool',\r\n      },\r\n    ],\r\n    name: 'setAdministrator',\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      {\r\n        name: '_name',\r\n        type: 'string',\r\n      },\r\n    ],\r\n    name: 'setName',\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      {\r\n        name: '_amountOfTokens',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'setStakingRequirement',\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      {\r\n        name: '_symbol',\r\n        type: 'string',\r\n      },\r\n    ],\r\n    name: 'setSymbol',\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      {\r\n        name: '_toAddress',\r\n        type: 'address',\r\n      },\r\n      {\r\n        name: '_amountOfTokens',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'transfer',\r\n    outputs: [\r\n      {\r\n        name: '',\r\n        type: 'bool',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [],\r\n    name: 'withdraw',\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'constructor',\r\n  },\r\n  {\r\n    payable: true,\r\n    stateMutability: 'payable',\r\n    type: 'fallback',\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        name: 'customerAddress',\r\n        type: 'address',\r\n      },\r\n      {\r\n        indexed: false,\r\n        name: 'incomingEthereum',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        indexed: false,\r\n        name: 'tokensMinted',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        indexed: true,\r\n        name: 'referredBy',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    name: 'onTokenPurchase',\r\n    type: 'event',\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        name: 'customerAddress',\r\n        type: 'address',\r\n      },\r\n      {\r\n        indexed: false,\r\n        name: 'tokensBurned',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        indexed: false,\r\n        name: 'ethereumEarned',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'onTokenSell',\r\n    type: 'event',\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        name: 'customerAddress',\r\n        type: 'address',\r\n      },\r\n      {\r\n        indexed: false,\r\n        name: 'ethereumReinvested',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        indexed: false,\r\n        name: 'tokensMinted',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'onReinvestment',\r\n    type: 'event',\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        name: 'customerAddress',\r\n        type: 'address',\r\n      },\r\n      {\r\n        indexed: false,\r\n        name: 'ethereumWithdrawn',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'onWithdraw',\r\n    type: 'event',\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        name: 'from',\r\n        type: 'address',\r\n      },\r\n      {\r\n        indexed: true,\r\n        name: 'to',\r\n        type: 'address',\r\n      },\r\n      {\r\n        indexed: false,\r\n        name: 'tokens',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'Transfer',\r\n    type: 'event',\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [\r\n      {\r\n        name: '',\r\n        type: 'bytes32',\r\n      },\r\n    ],\r\n    name: 'administrators',\r\n    outputs: [\r\n      {\r\n        name: '',\r\n        type: 'bool',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [\r\n      {\r\n        name: '_customerAddress',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    name: 'balanceOf',\r\n    outputs: [\r\n      {\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: 'buyPrice',\r\n    outputs: [\r\n      {\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [\r\n      {\r\n        name: '_tokensToSell',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'calculateEthereumReceived',\r\n    outputs: [\r\n      {\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [\r\n      {\r\n        name: '_ethereumToSpend',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'calculateTokensReceived',\r\n    outputs: [\r\n      {\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: 'decimals',\r\n    outputs: [\r\n      {\r\n        name: '',\r\n        type: 'uint8',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [\r\n      {\r\n        name: '_customerAddress',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    name: 'dividendsOf',\r\n    outputs: [\r\n      {\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [\r\n      {\r\n        name: '_customerAddress',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    name: 'dividendWithReferral',\r\n    outputs: [\r\n      {\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [\r\n      {\r\n        name: '_includeReferralBonus',\r\n        type: 'bool',\r\n      },\r\n    ],\r\n    name: 'myDividends',\r\n    outputs: [\r\n      {\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: 'myTokens',\r\n    outputs: [\r\n      {\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: 'name',\r\n    outputs: [\r\n      {\r\n        name: '',\r\n        type: 'string',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: 'onlyAmbassadors',\r\n    outputs: [\r\n      {\r\n        name: '',\r\n        type: 'bool',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: 'sellPrice',\r\n    outputs: [\r\n      {\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: 'stakingRequirement',\r\n    outputs: [\r\n      {\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: 'symbol',\r\n    outputs: [\r\n      {\r\n        name: '',\r\n        type: 'string',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: 'totalEthereumBalance',\r\n    outputs: [\r\n      {\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: 'totalSupply',\r\n    outputs: [\r\n      {\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n];\r\nexport const CONTRACT_ADDRESS = '0x53E0dAc0bD095ed00E63768E3ceca84419d7db7B';\r\n","import Web3 from 'web3';\r\nimport { CONTRACT_ABI, CONTRACT_ADDRESS } from './Contract';\r\n\r\nconst getWeb3 = () => {\r\n  return new Promise((resolve, reject) => {\r\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\r\n    window.addEventListener('load', async () => {\r\n      // Modern dapp browsers...\r\n      if (window.ethereum) {\r\n        const web3 = new Web3(window.ethereum);\r\n        try {\r\n          // Request account access if needed\r\n          await window.ethereum.enable();\r\n          // Acccounts now exposed\r\n          resolve(web3);\r\n        } catch (error) {\r\n          reject(error);\r\n        }\r\n      }\r\n      // Legacy dapp browsers...\r\n      else if (window.web3) {\r\n        // Use Mist/MetaMask's provider.\r\n        const web3 = window.web3;\r\n        console.log('Injected web3 detected.');\r\n        resolve(web3);\r\n      }\r\n      // Fallback to localhost; use dev console port by default...\r\n      else {\r\n        const provider = new Web3.providers.HttpProvider(\r\n          'http://localhost:9545'\r\n        );\r\n        const web3 = new Web3(provider);\r\n        console.log('No web3 instance injected, using Local web3.');\r\n        resolve(web3);\r\n      }\r\n    });\r\n  });\r\n};\r\n\r\nconst getContracts = web3 => {\r\n  const tokenContract = new web3.eth.Contract(CONTRACT_ABI, CONTRACT_ADDRESS);\r\n  return tokenContract;\r\n};\r\n\r\nexport { getWeb3, getContracts };\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nconst Client_Total_Capital = ({ contract, web3 }) => {\r\n  const [total, setTotal] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    const init = async () => {\r\n      const tA = await contract.methods.totalEthereumBalance().call();\r\n      setTotal(web3.utils.fromWei(tA));\r\n    };\r\n    init();\r\n  }, [total]);\r\n  return (\r\n    <article className='card product-item'>\r\n      <header className='card__header'>\r\n        <h1 className='product__title'>Total Client Capital</h1>\r\n      </header>\r\n      <div className='card__content'>\r\n        <h2 className='product__price'>$ {(total * 344.4).toFixed(6)}</h2>\r\n      </div>\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default Client_Total_Capital;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nconst FlexTestTokenCredit = ({ web3, contract, account }) => {\r\n  const [total, setTotal] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    const init = async () => {\r\n      const tA = await contract.methods.balanceOf(account[0]).call();\r\n      const Amount = parseFloat(web3.utils.fromWei(tA)).toFixed(6);\r\n      setTotal(Amount);\r\n    };\r\n    init();\r\n  }, [total]);\r\n\r\n  return (\r\n    <article className='card product-item'>\r\n      <header className='card__header'>\r\n        <h1 className='product__title'>$</h1>\r\n        <h1 className='product__title'>Flex Test Token</h1>\r\n      </header>\r\n      <div className='card__content'>\r\n        <h1 className='product__title'>Your Flex TestToken credit</h1>\r\n        <h2 className='product__price'>Value::{total} Flex Test Token</h2>\r\n      </div>\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default FlexTestTokenCredit;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nconst Client_DIvidend_Referrel = ({ contract, web3, account }) => {\r\n  const [dividend, setdividend] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    const init = async () => {\r\n      //With Out Refferral\r\n      const tA = await contract.methods.dividendsOf(account[0]).call();\r\n      const Amount = parseFloat(web3.utils.fromWei(tA)).toFixed(6);\r\n      setdividend(Amount);\r\n    };\r\n    init();\r\n  }, [dividend]);\r\n  return (\r\n    <article className='card product-item'>\r\n      <header className='card__header'>\r\n        <h1 className='product__title'>Your Dividend Earings</h1>\r\n      </header>\r\n      <div className='card__content'>\r\n        <h2 className='product__price'>Value::{dividend} ETH</h2>\r\n      </div>\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default Client_DIvidend_Referrel;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nconst Buy_Flex_token = ({ contract, web3, buy }) => {\r\n  const [amount, setAmount] = useState(0);\r\n  const [buyPrice, setBuyPrice] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    const init = async () => {\r\n      //With Refferral\r\n      const tAD = await contract.methods.buyPrice().call();\r\n      const AmountRef = parseFloat(web3.utils.fromWei(tAD)).toFixed(6);\r\n      setBuyPrice(AmountRef);\r\n    };\r\n    init();\r\n  }, [buyPrice]);\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    buy(amount, '0x0000000000000000000000000000000000000000');\r\n  };\r\n  return (\r\n    <article className='card product-item'>\r\n      <form onSubmit={e => onSubmit(e)}>\r\n        <header className='card__header'>\r\n          <h1 className='product__title'>Buy Flex Test Token</h1>\r\n          <h1 className='product__title'>(10% Dividend Distribution)</h1>\r\n        </header>\r\n        <div className='card__content'>\r\n          <h2 className='product__price'>Amount Of Ethereum</h2>\r\n          <h2 className='product__price'>\r\n            <input\r\n              className='input'\r\n              type='number'\r\n              min='0.00001'\r\n              max='100'\r\n              step='0.00001'\r\n              placeholder='Amount of Ethereum'\r\n              value={amount}\r\n              onChange={e => setAmount(e.target.value)}\r\n            ></input>\r\n          </h2>\r\n          <h2 className='product__price'>Buy Price</h2>\r\n          <h2 className='product__price'>\r\n            {buyPrice} ETH |{(buyPrice * 344.4).toFixed(4)}$\r\n          </h2>\r\n        </div>\r\n        <div className='card__actions'>\r\n          <button className='btn' type='submit'>\r\n            Buy\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default Buy_Flex_token;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nconst Sell_Flex_token = ({ contract, web3, Sell }) => {\r\n  const [amount, setAmount] = useState(0);\r\n  const [sellPrice, setSellPrice] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const init = async () => {\r\n      //With Refferral\r\n      const tAD = await contract.methods.sellPrice().call();\r\n      const AmountRef = parseFloat(web3.utils.fromWei(tAD)).toFixed(6);\r\n      setSellPrice(AmountRef);\r\n    };\r\n    init();\r\n  }, [sellPrice]);\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    Sell(amount);\r\n  };\r\n\r\n  return (\r\n    <article className='card product-item'>\r\n      <form onSubmit={e => onSubmit(e)}>\r\n        <header className='card__header'>\r\n          <h1 className='product__title'>Sell Flex Test Token</h1>\r\n          <h1 className='product__title'>(10% Dividend Distribution)</h1>\r\n        </header>\r\n        <div className='card__content'>\r\n          <h2 className='product__price'>Amount Of Flex Test Token</h2>\r\n          <h2 className='product__price'>\r\n            <input\r\n              className='input'\r\n              type='number'\r\n              min='0.00001'\r\n              max='1000'\r\n              step='0.00001'\r\n              placeholder='Amount of Ethereum'\r\n              value={amount}\r\n              onChange={e => setAmount(e.target.value)}\r\n              required\r\n            ></input>\r\n          </h2>\r\n\r\n          <h2 className='product__price'>Sell Price</h2>\r\n          <h2 className='product__price'>\r\n            {sellPrice} ETH |{(sellPrice * 344.4).toFixed(4)}$\r\n          </h2>\r\n        </div>\r\n        <div className='card__actions'>\r\n          <button className='btn' type='submit'>\r\n            Sell\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default Sell_Flex_token;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nconst Your_Total_Dividend = ({\r\n  contract,\r\n  web3,\r\n  account,\r\n  withDraw,\r\n  reInvest,\r\n}) => {\r\n  const [dividendWithReferral, setRefferal] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    const init = async () => {\r\n      //With Refferral\r\n      const tAD = await contract.methods\r\n        .dividendWithReferral(account[0])\r\n        .call();\r\n      const AmountRef = parseFloat(web3.utils.fromWei(tAD)).toFixed(6);\r\n      setRefferal(AmountRef);\r\n      console.log(dividendWithReferral);\r\n    };\r\n    init();\r\n  }, [dividendWithReferral]);\r\n\r\n  //WithDraw Funds\r\n  const withdraw = () => {\r\n    withDraw();\r\n  };\r\n\r\n  const reinvest = () => {\r\n    reInvest();\r\n  };\r\n  return (\r\n    <article className='card product-item'>\r\n      <header className='card__header'>\r\n        <h1 className='product__title'>Your Total Dividend</h1>\r\n      </header>\r\n      <div className='card__content'>\r\n        <h2 className='product__price'>Value::{dividendWithReferral} ETH</h2>\r\n        <h2 className='product__price'></h2>\r\n      </div>\r\n      <div className='card__actions'>\r\n        <button className='btn' onClick={() => withdraw()}>\r\n          WithDraw\r\n        </button>\r\n        <button className='btn' onClick={() => reinvest()}>\r\n          Reinvest\r\n        </button>\r\n      </div>\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default Your_Total_Dividend;\r\n","import React from 'react';\r\n\r\nconst backDrop = props => {\r\n  return props.show ? (\r\n    <div className='BackDrop' onClick={props.clicked}></div>\r\n  ) : null;\r\n};\r\nexport default backDrop;\r\n","import React, { Fragment } from 'react';\r\nimport BackDrop from './BackDrop';\r\n\r\nconst sideDrawer = props => {\r\n  let attachedClass = ['SideDrawer', 'Close'];\r\n  if (props.open) {\r\n    attachedClass = ['SideDrawer', 'Open'];\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <BackDrop show={props.open} clicked={props.closed} />\r\n      <div className={attachedClass.join(' ')} onClick={props.closed}>\r\n        <nav>\r\n          <ul className='NavigationItems'>\r\n            <li className='NavigationItem'>\r\n              <a href='https://www.demo.bitflex.app/login' className='btn'>\r\n                My Dashboard\r\n              </a>\r\n            </li>\r\n            <li className='NavigationItem'>\r\n              <a href='#' className='btn'>\r\n                Accounts\r\n              </a>\r\n            </li>\r\n            <li className='NavigationItem'>\r\n              <a href='#' className='btn'>\r\n                Backup Link 1\r\n              </a>\r\n            </li>\r\n            <li className='NavigationItem'>\r\n              <a href='#' className='btn'>\r\n                Backup Link 2\r\n              </a>\r\n            </li>\r\n            <li className='NavigationItem'>\r\n              <a\r\n                href='https://etherscan.io/address/0x167cb3f2446f829eb327344b66e271d1a7efec9a'\r\n                className='btn'\r\n              >\r\n                Verified & Audited Contract\r\n              </a>\r\n            </li>\r\n            <li className='NavigationItem'>\r\n              <a href='https://discord.com/invite/2JYfAvm' className='btn'>\r\n                Discord\r\n              </a>\r\n            </li>\r\n            <li className='NavigationItem'>\r\n              <a href='https://t.me/BitFlexCHAT' className='btn'>\r\n                Telegram\r\n              </a>\r\n            </li>\r\n            <li className='NavigationItem'>\r\n              <a href='https://twitter.com/BitFleXCrypto' className='btn'>\r\n                Twitter\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default sideDrawer;\r\n","import React, { Fragment, useState } from 'react';\r\nimport DrawerToggle from './SideDrawer/DrawerToggle';\r\nimport SideDrawer from './SideDrawer/SideDrawer';\r\n\r\nconst Navbar = () => {\r\n  const [sideDrawer, setSideDrawer] = useState(false);\r\n\r\n  const openSide = () => {\r\n    return setSideDrawer(!sideDrawer);\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <nav className='navbar'>\r\n        <div>\r\n          <h1 className='product__title' style={{ padding: '10px' }}>\r\n            <a className='btn' onClick={openSide}>\r\n              MENU\r\n            </a>\r\n          </h1>\r\n        </div>\r\n      </nav>\r\n      <SideDrawer closed={openSide} open={sideDrawer} />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { Fragment, useEffect, useState } from 'react';\r\nimport ClientCapital from './Components/Client_Total_Capital';\r\nimport FlexTestToken from './Components/FlexTestTokenCredit';\r\nimport DividendAndReferrel from './Components/Client_DIvidend_Referrel';\r\nimport BuyFlexToken from './Components/Buy_Flex_token';\r\nimport SellFlexToken from './Components/Sell_Flex_token';\r\nimport TotalDividend from './Components/Your_Total_Dividend';\r\nimport './App.css';\r\nimport Navbar from './Components/Navbar';\r\n\r\nconst App = ({ contract, web3, accounts }) => {\r\n  const [token, settoken] = useState(undefined);\r\n  const [dividend, setDividend] = useState(undefined);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setLoading(false);\r\n  }, [token, dividend]);\r\n\r\n  //Buy Tokens Using Ethereum\r\n  const buyTokens = async (amount, address) => {\r\n    const value = web3.utils.toWei(amount);\r\n    console.log(value);\r\n    const add = web3.utils.toChecksumAddress(address);\r\n    console.log(add);\r\n\r\n    await contract.methods\r\n      .buy(add)\r\n      .send({ from: accounts[0], value: value })\r\n      .on('receipt', async receipt => {\r\n        setLoading(true);\r\n        console.log(receipt);\r\n        const tA = await contract.methods.balanceOf(accounts[0]).call();\r\n        const Amount = parseFloat(web3.utils.fromWei(tA)).toFixed(6);\r\n\r\n        settoken(Amount);\r\n      })\r\n      .on('error', error => {\r\n        console.log(error);\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  //Sell Tokens\r\n\r\n  const sellTokens = async amount => {\r\n    const value = web3.utils.toWei(amount);\r\n    console.log(value);\r\n\r\n    await contract.methods\r\n      .sell(value)\r\n      .send({ from: accounts[0] })\r\n      .on('receipt', async receipt => {\r\n        setLoading(true);\r\n        console.log(receipt);\r\n        const tA = await contract.methods.balanceOf(accounts[0]).call();\r\n        const Amount = parseFloat(web3.utils.fromWei(tA)).toFixed(6);\r\n        settoken(Amount);\r\n        console.log(token);\r\n      })\r\n      .on('error', error => {\r\n        console.log(error);\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  //WithDraw Funds\r\n\r\n  const withdrawProfit = async () => {\r\n    await contract.methods\r\n      .withdraw()\r\n      .send({ from: accounts[0] })\r\n      .on('receipt', async receipt => {\r\n        setLoading(true);\r\n        console.log(receipt);\r\n        const tAD = await contract.methods\r\n          .dividendWithReferral(accounts[0])\r\n          .call();\r\n        const AmountRef = parseFloat(web3.utils.fromWei(tAD)).toFixed(6);\r\n        console.log(AmountRef);\r\n        setDividend(AmountRef);\r\n      })\r\n      .on('error', error => {\r\n        console.log(error);\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  //ReInvest Funds\r\n\r\n  const InvestProfit = async () => {\r\n    await contract.methods\r\n      .reinvest()\r\n      .send({ from: accounts[0] })\r\n      .on('receipt', async receipt => {\r\n        setLoading(true);\r\n        console.log(receipt);\r\n        const tAD = await contract.methods\r\n          .dividendWithReferral(accounts[0])\r\n          .call();\r\n        const AmountRef = parseFloat(web3.utils.fromWei(tAD)).toFixed(6);\r\n        console.log(AmountRef);\r\n        setDividend(AmountRef);\r\n      })\r\n      .on('error', error => {\r\n        console.log(error);\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Navbar />\r\n      {loading ? (\r\n        <div>\r\n          <h1 className='contant'>Loading....Your Transection is Pending</h1>\r\n        </div>\r\n      ) : (\r\n        <Fragment>\r\n          <div className='grid'>\r\n            <ClientCapital contract={contract} web3={web3} />\r\n            <FlexTestToken contract={contract} web3={web3} account={accounts} />\r\n            <DividendAndReferrel\r\n              contract={contract}\r\n              web3={web3}\r\n              account={accounts}\r\n            />\r\n            <BuyFlexToken contract={contract} web3={web3} buy={buyTokens} />\r\n            <SellFlexToken contract={contract} web3={web3} Sell={sellTokens} />\r\n            <TotalDividend\r\n              contract={contract}\r\n              web3={web3}\r\n              account={accounts}\r\n              withDraw={withdrawProfit}\r\n              reInvest={InvestProfit}\r\n            />\r\n          </div>\r\n          <div>\r\n            <h1 className='product__title'>\r\n              <a className='btn'>HOW IT WORKS</a>\r\n            </h1>\r\n          </div>\r\n          <h1 className='contant'>\r\n            1.First of all, install MetaMask \r\n            <strong>\r\n              <a href='https://metamask.io/'>here</a> \r\n            </strong>\r\n            and put some Ether in it.\r\n          </h1>\r\n          <h1 className='contant'>\r\n            2.To buy TX3 Test Token, simply click the \"Buy Tokens\" button and\r\n            enter the amount of Ether you want to convert to TX3, based on the\r\n            current Buy Price. When confirming the transaction on MetaMask, be\r\n            sure to use a high enough gas price so that the price doesn't change\r\n            drastically while the transaction is in progress. Here you can view\r\n            recommended gas prices. Buying coins will increase both the Buy\r\n            Price and Sell Price with 0.00000001 ETH per bought coin once the\r\n            transaction is complete.\r\n          </h1>\r\n          <h1 className='contant'>\r\n            3.Under \"TX3 Token Balance\" you can see how many TX3 you currently\r\n            own. Note that when cashing out coins, the Buy Price and Sell Price\r\n            drop afterwards, decreasing the value of your (and everyone else's)\r\n            coins by 0.00000001 ETH per coin.\r\n          </h1>\r\n          <h1 className='contant'>\r\n            4.Every time TX3 are bought or sold, a percentage of the fee from\r\n            the bought/sold coins will be divided under the current TX3 holders\r\n            (Dividends).\r\n          </h1>\r\n          <h1 className='contant'>\r\n            5.You can move your tokens into Dividends which then is stored as\r\n            Ether. To do this click on the \"Sell Tokens\" button - and your\r\n            tokens will be transferred into Ether based upon the current sell\r\n            price.\r\n          </h1>\r\n          <h1 className='contant'>\r\n            6.To cash out your TX3, click the \"Withdraw\" button and follow the\r\n            prompts.\r\n          </h1>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React, { useEffect, useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { getContracts, getWeb3 } from './Utils';\r\nimport App from './App';\r\n\r\nconst LoadingContainer = () => {\r\n  const [web3, setWeb3] = useState(undefined);\r\n  const [contract, setContract] = useState(undefined);\r\n  const [accounts, setAccount] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    console.log('web3 changed');\r\n    const init = async () => {\r\n      const web3 = await getWeb3();\r\n      console.log(web3);\r\n      const contract = await getContracts(web3);\r\n      console.log(contract);\r\n      const accounts = await web3.eth.getAccounts();\r\n\r\n      setWeb3(web3);\r\n      setContract(contract);\r\n      setAccount(accounts);\r\n      setLoading(false);\r\n    };\r\n    init();\r\n  }, [accounts, web3]);\r\n\r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        <div>...Loading</div>\r\n      ) : (\r\n        <App web3={web3} contract={contract} accounts={accounts}></App>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nReactDOM.render(<LoadingContainer />, document.getElementById('root'));\r\n"],"sourceRoot":""}